name: Comprehensive E2E Tests

on:
  schedule:
    # Run at 2:00 AM UTC every day
    - cron: '0 2 * * *'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      kb_types:
        description: 'KB types to test (comma-separated)'
        required: false
        default: 'text,file,website,youtube'
      timeout:
        description: 'Timeout in seconds'
        required: false
        default: '300'

jobs:
  e2e-matrix:
    strategy:
      matrix:
        kb-type: [text, file, website, youtube]
        node-version: [18, 20]
      fail-fast: false
    
    runs-on: ubuntu-latest
    name: E2E Test - ${{ matrix.kb-type }} (Node ${{ matrix.node-version }})
    
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Sensay CLI
      run: |
        # Download and run the install script in non-interactive mode
        curl -fsSL https://raw.githubusercontent.com/sensay-io/sensay-cli/main/install.sh | bash -s -- --non-interactive
        
        # Add to PATH for this job
        echo "$HOME/.sensay/bin" >> $GITHUB_PATH
    
    - name: Verify installation
      run: |
        sensay --version
    
    - name: Run E2E test for ${{ matrix.kb-type }}
      env:
        SENSAY_API_KEY: ${{ secrets.SENSAY_API_KEY }}
      run: |
        sensay e2e --non-interactive --kb-types ${{ matrix.kb-type }} --timeout ${{ github.event.inputs.timeout || '300' }}
      continue-on-error: true
      id: test
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-results-${{ matrix.kb-type }}-node${{ matrix.node-version }}
        path: |
          *.log
          test-results/
    
    - name: Set job status
      if: steps.test.outcome == 'failure'
      run: exit 1

  e2e-summary:
    needs: e2e-matrix
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Generate summary report
      run: |
        echo "# E2E Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| KB Type | Node 18 | Node 20 |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|---------|---------|" >> $GITHUB_STEP_SUMMARY
        
        # This would need actual parsing of results
        # For now, just a template
        echo "| text | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
        echo "| file | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
        echo "| website | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
        echo "| youtube | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
    
    - name: Notify on failure
      if: contains(needs.*.result, 'failure')
      uses: actions/github-script@v7
      with:
        script: |
          const date = new Date().toISOString().split('T')[0];
          const title = `E2E Tests Failed - ${date}`;
          
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'e2e-failure'
          });
          
          const existingIssue = issues.data.find(issue => issue.title === title);
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: `The E2E tests failed on ${date}.\n\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}\n\nPlease check the test results in the workflow artifacts.`,
              labels: ['e2e-failure', 'automated']
            });
          }